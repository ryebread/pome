/*==============================================================*/
/* DBMS name:      MySQL 5.0                                    */
/* Created on:     2011/12/06 10:39:34                          */
/*==============================================================*/


drop table if exists pome.article;

drop table if exists pome.comment;

drop table if exists pome.role;

drop table if exists pome.sessions;

drop table if exists pome.users;

drop index rid on pome.users_roles;

drop table if exists pome.users_roles;

/*==============================================================*/
/* User: pome                                                   */
/*==============================================================*/
create user pome;

/*==============================================================*/
/* Table: article                                               */
/*==============================================================*/
create table pome.article
(
   aid                  int(10) unsigned not null auto_increment comment 'The primary identifier for a node.',
   uid                  int(10) default 0 comment 'Primary Key: Unique user ID.',
   title                national varchar(255) not null comment 'The title of this node, always treated as non-markup plain text.',
   created              int(11) not null default 0 comment 'The Unix timestamp when the node was created.',
   body                 text,
   primary key (aid)
);

alter table pome.article comment 'The base table for article.';

/*==============================================================*/
/* Table: comment                                               */
/*==============================================================*/
create table pome.comment
(
   cid                  int(11) not null auto_increment comment 'Primary Key: Unique comment ID.',
   aid                  int(10) comment 'The primary identifier for a node.',
   created_at           int(11) not null default 0 comment 'The time that the comment was created, as a Unix timestamp.',
   body                 national varchar(255) not null comment 'The vancode representation of the comment¡¯s place in a thread.',
   name                 national varchar(60) comment 'The comment author¡¯s name. Uses users.name if the user is logged in, otherwise uses the value typed into the comment form.',
   primary key (cid)
);

alter table pome.comment comment 'Stores comments and associated data.';

/*==============================================================*/
/* Table: role                                                  */
/*==============================================================*/
create table pome.role
(
   rid                  int(10) unsigned not null comment 'Primary Key: Unique role ID.',
   name                 national varchar(64) not null comment 'Unique role name.',
   weight               int(11) not null default 0 comment 'The weight of this role in listings and the user interface.',
   primary key (rid)
);

alter table pome.role comment 'Stores user roles.';

/*==============================================================*/
/* Table: sessions                                              */
/*==============================================================*/
create table pome.sessions
(
   uid                  int(10) default 0 comment 'Primary Key: Unique user ID.',
   sid                  national varchar(128) not null comment 'A session ID. The value is generated by Drupal¡¯s session handlers.',
   ssid                 national varchar(128) not null comment 'Secure session ID. The value is generated by Drupal¡¯s session handlers.',
   hostname             national varchar(128) not null comment 'The IP address that last used this session ID (sid).',
   timestamp            int(11) not null default 0 comment 'The Unix timestamp when this session last requested a page. Old records are purged by PHP automatically.',
   cache                int(11) not null default 0 comment 'The time of this user¡¯s last post. This is used when the site has specified a minimum_cache_lifetime. See cache_get().',
   session              longblob comment 'The serialized contents of $_SESSION, an array of name/value pairs that persists across page requests by this session ID. Drupal loads $_SESSION from here at the start of each request and saves it at the end.',
   primary key (sid)
);

alter table pome.sessions comment 'Drupal¡¯s session handlers read and write into the...';

/*==============================================================*/
/* Table: users                                                 */
/*==============================================================*/
create table pome.users
(
   uid                  int(10) unsigned not null default 0 comment 'Primary Key: Unique user ID.',
   name                 national varchar(60) not null comment 'Unique user name.',
   pass                 national varchar(128) not null comment 'User¡¯s password (hashed).',
   mail                 national varchar(254) comment 'User¡¯s e-mail address.',
   created_at           int(11) not null default 0 comment 'Timestamp for when user was created.',
   primary key (uid)
);

alter table pome.users comment 'Stores user data.';

/*==============================================================*/
/* Table: users_roles                                           */
/*==============================================================*/
create table pome.users_roles
(
   uid                  int(10) unsigned not null default 0 comment 'Primary Key: users.uid for user.',
   rid                  int(10) unsigned not null default 0 comment 'Primary Key: role.rid for role.',
   primary key (uid, rid)
);

alter table pome.users_roles comment 'Maps users to roles.';

/*==============================================================*/
/* Index: rid                                                   */
/*==============================================================*/
create index rid on pome.users_roles
(
   rid
);

alter table pome.article add constraint FK_Reference_3 foreign key (uid)
      references pome.users (uid) on delete restrict on update restrict;

alter table pome.comment add constraint FK_Reference_5 foreign key (aid)
      references pome.article (aid) on delete restrict on update restrict;

alter table pome.sessions add constraint FK_Reference_6 foreign key (uid)
      references pome.users (uid) on delete restrict on update restrict;

alter table pome.users_roles add constraint FK_Reference_1 foreign key (rid)
      references pome.role (rid) on delete restrict on update restrict;

alter table pome.users_roles add constraint FK_Reference_2 foreign key (uid)
      references pome.users (uid) on delete restrict on update restrict;

